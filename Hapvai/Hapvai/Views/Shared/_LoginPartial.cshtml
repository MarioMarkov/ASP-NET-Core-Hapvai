@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IOwnerService ownerService
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var userId = User.FindFirst(ClaimTypes.NameIdentifier).Value;
    var userIsOwner = ownerService.IsDealer(userId);

    @if (!userIsOwner)
    {
        <li class="nav-item">
            <form class="nav-link text-dark" id="selectLanguage" asp-controller="Owner" asp-action="Create" asp-route-returnUrl="@Context.Request.Path" method="post" role="form">
                <button  type="submit">
                    Become Owner
                </button>
            </form>
        </li>
    }
    else { 
        <li class="nav-item">
            <a href="/" class="nav-link text-dark">See my Restaurants</a>
        </li>
    }

    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
